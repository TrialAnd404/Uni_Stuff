Korrektur: 0110

	8	2	,	3	2
	1000	0010	,	0011	0010

	9	6	,	8	5
	1001	0110	,	1000	0101
_____________________________________________
      1	0001	1000		1011	0111

Korr.	0111	0001		0110
_____________________________________________
   0001	0111	1001		0001	0111
      1    7       9    ,          1       7




	VLZ	Vorz.	Excess4	1er	2er
	Ganzz.	Ganzz.		Kompl.	Kompl.
000	0	0	-4	111	222
001	1	1	-3	110	221
010	2	2	-2	101	212
011	3	3	-1	100	211
100	4	-0	0	011	122
101	5	-1	1	010	121
110	6	-2	2	001	112
111	7	-3	3	000	111


-12.5
neg vorzeichen -> vorzeichenbit =1

x xxxxx xxxxxx
1

12= 1100
.5= .1
12.5= 1100.1
-> 1.1001 *2³ -> mant= 1001

x xxxxx xxxxxx
1       100100

exp 3 exc 15 -> 3+15=18 = 10010

x xxxxx xxxxxx
1 10010 100100 = -12.5
1100 1010 0100
C    A    4
============

1.875
pos vorzeichen -> vorzeichenbit =0

x xxxxx xxxxxx
0

1= 1
.875= .111
1.875= 1.111
-> 1.111 * 2⁰ -> mant= 111

x xxxxx xxxxxx
1       111000

exp 0 exc 15 -> 3+15=15 = 1111

x xxxxx xxxxxx
1 01111 100100 = 1.875
1011 1110 0100
B    E    6
============

größte positive zahl:
vorzeichenbit 0 -> positiv

x xxxxx xxxxxx
0

exponent maximal groß -> 11111 = 31 exc 15= 16 =2¹⁶

x xxxxx xxxxxx
0 11111 

mantisse maximal groß -> 111... = 1.111...

x xxxxx xxxxxx
0 11111 111111

= 1.111111 * 2¹⁶

kleinste positive zahl
vorzeichenbit 0 -> positiv

x xxxxx xxxxxx
0

exponent maximal klein -> 00000 = 0 exc 15 = -15 = 2⁻¹⁵

x xxxxx xxxxxx
0 00000 000000

minimale mantisse = 000... = 1.000...

x xxxxx xxxxxx
0 00000 000000

= 1.000001 * 2⁻¹⁵


1 01111111 00000...0
vz= -1
exp= 127(exc 127)
man= 1
=> -1 * 1*2⁰ = -1

0 10000010 11010...0
vz= 1
exp= 130(exc 127)
man= 1.11010
=> 1.1101 *2³ = 1110.1 = 14.5

1 00000000 00000100...0
vz= -1
exp= 0(exc 127)
man= 000001
=> -1 * 1.000001 * 2⁻¹²⁷ ~ 0

0 11111111 000000..0
vz= 1
exp= 255(exc 127)
man= 1.000...0
=> 1 * 1.000...0 * 2¹²⁸ = 2¹²⁹
bzw: ch= 2k+1; m=0 >>> unendlich







